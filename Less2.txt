#ТерВер и МатСтат

import math
import numpy as np

#   Практическое задание №1 для 2 урока
#   Контрольная состоит из 5 вопросов.     
#   каждый вопрос имеет 4 варианта ответа, один верный
#   Составить закон распределения правильных ответов
#   при простом угадывании. Найти М(х), D(x)

print ('Задание №1 ')
print (' ')

for i in range (0, 6):
  Px = (3**(5-i))/(4**5)
  print ('x=', i, '  P(', i, ')=', Px)

print (' ')
#M(x)=np
Mx = 5 * 0.25
print ('M(x)=', Mx)

#D(x)=np(1-p)
Dx = (5 * 0.25) * (1 - 0.25)
print ('D(x)=', Dx)
print (' ')
print (' ')


#   Практическое задание №2 для 2 урока
#   Вероятность попадания в цель при одном выстреле равна 0.01. 
#   Каĸова вероятность того,
#   что число попаданий при 200 выстрелах будет не менее 5 и не более 10?

def combinations (n,k):
    return np.math.factorial(n) // (np.math.factorial(k) * np.math.factorial(n-k))

#   Возможно 6 вариантов развития событий:
#   Будет 5,6,7,8,9,10 попаданий
#   вероятность получить равна сумме этих 6-х событий
#   P=P5+P6+P7+P8+P9+P10
#   применим формулу бернулли

print ('Задание №2')
print (' ')
print ('По формуле Бернулли')
n = 200
p = 0.01
q = 1 - p
otvet = 0

for k in range(5, 11):

  Pk = combinations (n,k) * (p**k) * (q**(n-k))
  print ('вероятность ', k, ' попаданий =  ', Pk)
  otvet = otvet + Pk

print ('вероятность попадания от 5 до 10 равна ', otvet)
print (' ')

#   второй способ решения методом Пуассона
n = 200
p = 0.01
#e**-2 = 0,135335
lyanbda = 2   #lyanbda = n*p
q = 1 - p
otvet = 0
print ('По формуле Пуассона')
for k in range(5, 11):
  Pk = (0.1353352832366 * (2**k))/(math.factorial(k))
  print ('вероятность ', k, ' попаданий =  ', Pk)
  otvet = otvet + Pk

print ('вероятность попадания от 5 до 10 равна ', otvet)
print (' ')
print (' ')

#   Практическое задание №3 для 2 урока
#   Вероятность попадания в цель при одном выстреле равна 0.01.     
#   сĸольĸо выстрелов нужно сделать
#   чтобы быть уверенным с вероятностью 0.9,
#   что хотя бы 10 раз будет совершено попадание?

def combinations (n,k):
    return np.math.factorial(n) // (np.math.factorial(k) * np.math.factorial(n-k))

#   Возможно 10 нежелательных вариантов развития событий:
#   Будет 0,1,2,3,4,5,6,7,8,9,10 попаданий
#   вероятность получить равна 1 минус вероятность этих событий
#   P=1-P1-P2-P3-P4-P5-P6-P7-P8-P9

print ('Задание №3')
print (' ')
#   применим способ решения методом Пуассона

n = 200
p = 0.01
e = 2.718281828

while True:
  lamda = n * p  #lyanbda = n*p
  P_uspekh = 1

  for k in range(0, 10):
    Pk = ((e**((-1)*lamda)) * (lamda**k))/(math.factorial(k))
    #print ('вероятность ', k, ' попаданий =  ', Pk)
    P_uspekh = P_uspekh - Pk

  if P_uspekh >= 0.9:
    print('при количестве выстрелов =  ', n)
    print ('вероятность попадания более 10 раз = ', P_uspekh)
    break
  n = n + 1